name: "Setup BentoML"
description: "Bootstrap and setup base environment for BentoML"
branding:
  icon: 'box'
  color: 'orange'
inputs:
  bentoml-version:
    description: The version of BentoML to use. Leave it empty to use the latest version, set to 'main' to use 'nightly'
    required: false
    default: ""
  python-version:
    description: Default Python version to pass through to actions/setup-python
    required: false
  python-version-file:
    description: "File containing the Python version to use. Example: .python-version"
    required: false
  architecture:
    description: 'Which architecture to run on'
    required: false
    default: x64
runs:
  using: composite
  steps:
    - name: Setup python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # ratchet:actions/setup-python@v5
      with:
        python-version-file: ${{ inputs.python-version-file }}
        python-version: ${{ inputs.python-version }}
        architecture: ${{ inputs.architecture }}
    - name: Get cache key prefix
      id: get-cache-key-prefix
      shell: bash
      run: echo "prefix=${{ runner.os }}-${{ inputs.python-version }}" >> $GITHUB_OUTPUT
    - name: Get pip cache dir
      id: pip-cache-dir
      shell: bash
      run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
    - name: Cache pip dependencies
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # ratchet:actions/cache@v4
      id: cache-pip
      with:
        path: ${{ steps.pip-cache-dir.outputs.dir }}
        key: ${{ steps.get-cache-key-prefix.outputs.prefix }}-pypi
        restore-keys: |
          ${{ steps.get-cache-key-prefix.outputs.prefix }}-pypi-
    - name: Install core bentoml and adjacent tooling (hatch, towncrier)
      shell: bash
      run: |
        if [[ "${{ inputs.bentoml-version }}" == "main" ]]; then
          pip install -U "git+https://github.com/bentoml/bentoml@main"
        elif [[ -n "${{ inputs.bentoml-version }}" ]]; then
          pip install -U "bentoml==${{ inputs.bentoml-version }}"
        else
          pip install -U "bentoml>=1.0.25"
        fi
        echo "Successfully installed BentoML: $(bentoml --version)"
        pip install hatch towncrier
